spring.application.name=demo
# spring.datasource.url=jdbc:h2:mem:testdb;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=FALSE
# spring.datasource.driver-class-name=org.h2.Driver
# spring.datasource.username=sa
# spring.datasource.password=

spring.datasource.url=jdbc:oracle:thin:@localhost:1521/XEPDB1
spring.datasource.driver-class-name=oracle.jdbc.driver.OracleDriver
spring.datasource.username=FOO
spring.datasource.password=BAR


spring.h2.console.enabled=true
spring.jpa.defer-datasource-initialization=true
spring.sql.init.mode=always
# spring.jpa.hibernate.ddl-auto=create-drop
spring.jpa.hibernate.ddl-auto=update

# create-dropはとにかく再作成(updateは、テーブルがなかったら作成)
# resource/data.sqlは上記と関係なく実施されそう
# updateの時とかは実行されてキー重複とかなるので、拡張子を変えておくなどしよう


# spring.jpa.properties.hibernate.jdbc.time_zone=Asia/Tokyo

# SQLをログ出力
logging.level.org.hibernate.SQL=debug
logging.level.com.example.demo=debug


# SQLのバインドパラメーターをログ出力
# logging.level.org.hibernate.type=trace
# logging.level.org.hibernate.orm.jdbc.bind=trace

# SELECT文の結果をログ出力
logging.level.org.hibernate.orm.jdbc.extract=trace


# spring.sql.init.schema-locations=classpath:schema.sql 
# spring.sql.init.data-locations=classpath:data.sql 